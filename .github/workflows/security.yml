name: 🔒 Security & Dependencies

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: "0 2 * * *"
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  GO_VERSION: "1.24"

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  dependency-check:
    name: 🔍 Dependency Security Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 🚨 Run Go vulnerability check
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: 📊 Dependency review (on PRs)
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4

  sbom-generation:
    name: 📋 SBOM Generation
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 📋 Install Syft for SBOM generation
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: 📋 Generate SBOM (SPDX JSON)
        run: |
          syft . -o spdx-json=go-toolbox-sbom-spdx.json

      - name: � Generate SBOM (CycloneDX JSON)
        run: |
          syft . -o cyclonedx-json=go-toolbox-sbom-cyclonedx.json

      - name: 📤 Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-reports
          path: |
            *.json
          retention-days: 30

  license-check:
    name: ⚖️ License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 📦 Install go-licenses
        run: go install github.com/google/go-licenses@latest

      - name: ⚖️ Check licenses
        run: |
          echo "## Dependency Licenses" > licenses-report.md
          echo "" >> licenses-report.md
          go-licenses report ./... >> licenses-report.md || true

      - name: 📤 Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-compliance-report
          path: licenses-report.md
          retention-days: 30
